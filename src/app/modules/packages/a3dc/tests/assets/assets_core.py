import numpy as np
from context import VividImage
       
###############################################################################
################################Measurements###################################
###############################################################################

        
shape_descriptors=['volume','voxelCount','centroid',
                       'ellipsoidDiameter','boundingBox',
                       'pixelsOnBorder','elongation',
                       'equivalentSphericalRadius','flatness',
                       'principalAxes','principalMoments',
                       'roundness','feretDiameter','perimeter',
                       'perimeterOnBorder','perimeterOnBorderRatio',
                       'equivalentSphericalPerimeter']

intensity_descriptors = ['meanIntensity','medianIntensity', 'skewness',
                       'kurtosis','variance','maximumPixel',
                           'maximumValue','minimumValue','minimumPixel',
                           'centerOfMass','standardDeviation',
                           'cumulativeIntensity','getWeightedElongation',
                           'getWeightedFlatness','getWeightedPrincipalAxes',
                           'getWeightedPrincipalMoments']
        
  
###############################################################################
###############################Test data#######################################
###############################################################################

#Test arrays    
input_array_1 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]]]]],dtype=np.uint16)


input_array_2 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [0,1,1,1,0,0,0,0,0,0], 
                           [0,1,1,1,0,0,0,0,0,0],
                           [0,1,1,1,0,0,0,0,0,0],
                           [0,0,0,0,0,0,2,2,2,0],
                           [3,3,3,3,3,0,2,2,2,0],
                           [3,3,3,3,3,0,2,2,2,0],
                           [3,3,3,3,3,0,0,0,0,0],
                           [3,3,3,3,3,0,0,4,0,5],
                           [3,3,3,3,3,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,1,1,1,0,0,0,0,0,0], 
                           [0,1,1,1,0,0,0,0,0,0],
                           [0,1,1,1,0,0,0,0,0,0],
                           [0,0,0,0,0,0,2,2,2,0],
                           [3,3,3,3,3,0,2,2,2,0],
                           [3,3,3,3,3,0,2,2,2,0],
                           [3,3,3,3,3,0,0,0,0,0],
                           [3,3,3,3,3,0,0,4,0,5],
                           [3,3,3,3,3,0,0,0,0,0]]]]],dtype=np.uint16)



input_array_3 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]]]]],dtype=np.uint16)

input_array_4 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,255,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,100,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,150,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,255,0,255],
                           [0,0,0,0,0,0,0,0,0,0]]]]],dtype=np.uint16)





input_array_5 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [255,0,0,0,150,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,255,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,100,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,150,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,255],
                           [0,0,0,0,0,0,0,0,0,0]],
                         [[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [255,0,0,0,0,0,0,0,0,0]]]]],dtype=np.uint16)



input_array_6 = np.array([[0,0,0,0,0,0,0,0,0,0],
                        [0,200,200,200,0,0,0,0,0,0], 
                        [0,200,255,200,0,0,0,0,0,0],
                        [0,200,200,200,0,0,0,0,0,0],
                        [0,0,0,0,0,0,50,50,50,0],
                        [150,150,150,150,150,0,50,100,50,0],
                        [150,50,100,50,150,0,50,50,50,0],
                        [150,100,150,100,150,0,0,0,0,0],
                        [150,50,100,50,150,0,0,255,0,255],
                        [150,150,150,150,150,0,0,0,0,0]],dtype=np.uint16)


input_array_7 = np.array([[[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                         [0,0,0,0,0,0,0,0,0,0], 
                         [0,0,255,0,0,0,0,0,0,0],
                         [0,0,200,0,0,0,0,0,0,0],
                         [0,0,0,0,0,0,50,50,50,0],
                         [0,0,0,0,150,0,50,100,50,0],
                         [0,50,100,50,0,0,50,50,50,0],
                         [0,100,150,100,0,0,0,0,0,0],
                         [0,50,100,50,0,0,0,255,0,255],
                         [0,0,0,0,150,0,0,0,0,0]]],dtype=np.uint16)




input_array_8 = np.array([[[[[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,255,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,100,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,150,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]] ], 
                        
                        [[[0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0], 
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0],
                           [0,0,0,0,0,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]] ],

                        [[[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,0,0,0],
                           [150,150,150,150,150,0,0,0,0,0]],
                        [[0,0,0,0,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0], 
                           [0,200,255,200,0,0,0,0,0,0],
                           [0,200,200,200,0,0,0,0,0,0],
                           [0,0,0,0,0,0,50,50,50,0],
                           [150,150,150,150,150,0,50,100,50,0],
                           [150,50,100,50,150,0,50,50,50,0],
                           [150,100,150,100,150,0,0,0,0,0],
                           [150,50,100,50,150,0,0,255,0,255],
                           [150,150,150,150,150,0,0,0,0,0]]]]],dtype=np.uint16)


#Dictionaries of metadata related to image size and units
size_keys_1={'PhysicalSizeX':0.1,'PhysicalSizeY':0.2,
                   'PhysicalSizeZ':0.3, 'TimeIncrement':0.4, 
                   'PhysicalSizeXUnit':'test unit x',
                   'PhysicalSizeYUnit':'test unit y',
                   'PhysicalSizeZUnit':'test unit z',
                   'TimeIncrementUnit':'test unit t'}


size_keys_2={'PhysicalSizeX':1,'PhysicalSizeY':2,
                   'PhysicalSizeZ':3, 'TimeIncrement':4, 
                   'PhysicalSizeXUnit':'micron x',
                   'PhysicalSizeYUnit':'micron y',
                   'PhysicalSizeZUnit':'micron z',
                   'TimeIncrementUnit':'micron t'}



###############################################################################
####################################Analyze####################################
###############################################################################

##############################################################################
#Case 1!!!!!!
analyze_input_1=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)

analyze_output_image_1=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                              [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                              [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                             [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                              [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                              [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                              [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                        dtype=np.uint16)

analyze_output_metadata_1={'Type': np.dtype('uint16'),'DimensionOrder':'XYZCT', 
                        'Name': ['Channel 1'], 'SamplesPerPixel': [1], 
                        'SizeY': 10, 'SizeX': 10, 'SizeZ': 2, 'SizeC': 1, 
                        'SizeT': 1, 'PhysicalSizeX': 0.1, 'PhysicalSizeY': 0.2, 
                        'PhysicalSizeZ': 0.3, 'TimeIncrement': 0.4, 
                        'TimeIncrementUnit': 'test unit t', 
                        'PhysicalSizeXUnit': 'test unit x', 
                        'PhysicalSizeYUnit': 'test unit y', 
                        'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_1={'tag': [1, 2, 3, 4, 5], 
                           'volume': [0.108, 0.108, 0.3, 0.012, 0.012], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'pixelsOnBorder': [18, 18, 50, 2, 2], 
                           'centroid': [(0.6, 0.4, 0.05), (2.1, 1.0, 0.05), 
                                        (0.6, 1.4000000000000001, 0.05), 
                                        (2.1, 1.6, 0.05), (2.6999999999999997, 
                                        1.6, 0.05)], 
                           'meanIntensity in Channel 1': [1.0, 2.0, 3.0, 4.0, 
                                                          5.0], 
                           'maximumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), 
                                                         (4, 9, 1), (7, 8, 1), 
                                                         (9, 8, 1)]}

analyze_output_1=VividImage(analyze_output_image_1, 
                                        analyze_output_metadata_1, 
                                        analyze_output_database_1)

analyze_settings_1=None

analyze_case_1={'input':analyze_input_1, 'result':analyze_output_1, 
                
                'settings':analyze_settings_1}

###############################################################################
analyze_input_2=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)


analyze_output_image_2=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                           dtype=np.uint16)

analyze_output_metadata_2={'Type':np. dtype('uint16'), 
                           'DimensionOrder': 'XYZCT', 
                           'Name': ['Channel 1'], 'SamplesPerPixel': [1], 
                           'SizeY': 10, 'SizeX': 10, 'SizeZ': 2, 'SizeC': 1,
                           'SizeT': 1, 'PhysicalSizeX': 0.1, 
                           'PhysicalSizeY': 0.2, 'PhysicalSizeZ': 0.3, 
                           'TimeIncrement': 0.4, 
                           'TimeIncrementUnit': 'test unit t', 
                           'PhysicalSizeXUnit': 'test unit x', 
                           'PhysicalSizeYUnit': 'test unit y', 
                           'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_2={'tag': [1, 2, 3, 4, 5], 
                           'volume': [0.108, 0.108, 0.3, 0.012, 0.012], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'pixelsOnBorder': [18, 18, 50, 2, 2], 
                           'centroid': [(0.6, 0.4, 0.05), (2.1, 1.0, 0.05), 
                                        (0.6, 1.4000000000000001, 0.05), 
                                        (2.1, 1.6, 0.05), 
                                        (2.6999999999999997, 1.6, 0.05)],
                           'meanIntensity in Channel 1': [1.0, 2.0, 3.0, 4.0,
                                                          5.0], 
                           'maximumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), 
                                                         (4, 9, 1), (7, 8, 1), 
                                                         (9, 8, 1)]}

analyze_settings_2={'img_list':[]}


analyze_output_2=VividImage(analyze_output_image_2, 
                                        analyze_output_metadata_2, 
                                        analyze_output_database_2)

analyze_case_2={'input':analyze_input_2, 'result':analyze_output_2, 
                'settings':analyze_settings_2}

###############################################################################
analyze_input_3=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)


analyze_output_image_3=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                  [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                  [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                               dtype=np.uint16)

analyze_output_metadata_3={'Type':np.dtype('uint16'), 
                           'DimensionOrder': 'XYZCT', 
                           'Name': ['Channel 1'], 'SamplesPerPixel': [1], 
                           'SizeY': 10, 'SizeX': 10, 'SizeZ': 2, 'SizeC': 1,
                           'SizeT': 1, 'PhysicalSizeX': 0.1, 
                           'PhysicalSizeY': 0.2, 'PhysicalSizeZ': 0.3, 
                           'TimeIncrement': 0.4, 
                           'TimeIncrementUnit': 'test unit t', 
                           'PhysicalSizeXUnit': 'test unit x', 
                           'PhysicalSizeYUnit': 'test unit y', 
                           'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_3={'tag': [1, 2, 3, 4, 5], 
                           'volume': [0.108, 0.108, 0.3, 0.012, 0.012], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'pixelsOnBorder': [18, 18, 50, 2, 2], 
                           'centroid': [(0.6, 0.4, 0.05), (2.1, 1.0, 0.05), 
                                        (0.6, 1.4000000000000001, 0.05), 
                                        (2.1, 1.6, 0.05), 
                                        (2.6999999999999997, 1.6, 0.05)],
                           'meanIntensity in Channel 1': [1.0, 2.0, 3.0, 4.0,
                                                          5.0], 
                           'maximumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), 
                                                         (4, 9, 1), (7, 8, 1), 
                                                         (9, 8, 1)]}

analyze_settings_3={'img_list':None}


analyze_output_3=VividImage(analyze_output_image_3, 
                                        analyze_output_metadata_3, 
                                        analyze_output_database_3)

analyze_case_3={'input':analyze_input_3, 'result':analyze_output_3, 
                'settings':analyze_settings_3}
###############################################################################
analyze_input_4=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)



analyze_output_image_4=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                     [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                     [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                     [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                     [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                     [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                     [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                     [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                     [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                     [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                     [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                      [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                      [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                      [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                      [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                      [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                      [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                      [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                      [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                      [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                               dtype=np.uint16)

analyze_output_metadata_4={'Type': np.dtype('uint16'),
                           'DimensionOrder': 'XYZCT', 'Name': ['Channel 1'], 
                           'SamplesPerPixel': [1], 'SizeY': 10, 'SizeX': 10, 
                           'SizeZ': 2, 'SizeC': 1, 'SizeT': 1, 
                           'PhysicalSizeX': 0.1, 'PhysicalSizeY': 0.2, 
                           'PhysicalSizeZ': 0.3, 'TimeIncrement': 0.4, 
                           'TimeIncrementUnit': 'test unit t', 
                           'PhysicalSizeXUnit': 'test unit x', 
                           'PhysicalSizeYUnit': 'test unit y', 
                           'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_4={'tag': [1, 2, 3, 4, 5], 
                           'volume': [0.108, 0.108, 0.3, 0.012, 0.012], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'centroid': [(0.6, 0.4, 0.05), 
                                        (2.1, 1.0, 0.05), 
                                        (0.6, 1.4000000000000001, 0.05), 
                                        (2.1, 1.6, 0.05), 
                                        (2.6999999999999997, 1.6, 0.05)], 
                            'ellipsoidDiameter': [(0.23447779253903178, 
                                                   0.7658012636463994, 
                                                   1.148701895469599), 
                                                  (0.23447779253903228, 
                                                   0.7658012636464039, 
                                                   1.1487018954695902), 
                                                  (0.22853907486704167, 
                                                   1.292812236836682, 
                                                   1.9392183552550215), 
                                                  (0.0, 0.0, 0.0), 
                                                  (0.0, 0.0, 0.0)], 
                            'boundingBox': [(1, 1, 0, 3, 3, 2), 
                                            (6, 4, 0, 3, 3, 2), 
                                            (0, 5, 0, 5, 5, 2),
                                            (7, 8, 0, 1, 1, 2), 
                                            (9, 8, 0, 1, 1, 2)], 
                            'pixelsOnBorder': [18, 18, 50, 2, 2], 
                            'elongation': [1.4999999999999998, 
                                           1.4999999999999798, 
                                           1.4999999999999991, 
                                           0.0, 0.0], 
                            'equivalentSphericalRadius': [0.29542350655280897,
                                                          0.29542350655280897, 
                                                          0.4152830592077074, 
                                                          0.14202480846149887, 
                                                          0.14202480846149887], 
                            'flatness': [3.2659863237109, 3.265986323710912, 
                                         5.656854249492381, 0.0, 0.0], 
                            'principalAxes': [(-6.033820786006279e-17, 
                                               6.929882858364852e-32, 1.0, 
                                               -8.326672684688669e-16, 
                                               1.0, -1.1954047930679372e-31, 
                                               -1.0, -8.326672684688669e-16, 
                                               -6.033820786006279e-17), 
                                         (4.827056628805114e-16, 
                                          -2.8712664429959896e-16, 
                                          1.0, -1.3211653993039363e-14, 
                                          -1.0000000000000002, 
                                          -2.8712664429959284e-16, 
                                          1.0000000000000009, 
                                          -1.296185381249871e-14, 
                                          -4.827056628805161e-16), 
                                          (0.0, 0.0, 1.0, 
                                           -1.1102230246251581e-15, 
                                           -1.0, 0.0, 1.0, 
                                           -1.1102230246251581e-15, -0.0), 
                                           (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 
                                            0.0, 1.0), 
                                            (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 
                                             0.0, 0.0, 1.0)], 
                            'principalMoments': [(0.002500000000000009,
                                                  0.0266666666666667,
                                                  0.06000000000000005), 
                                                 (0.0025000000000000022, 
                                                  0.026666666666666818, 
                                                  0.059999999999998714), 
                                                 (0.0025000000000000022, 
                                                  0.08000000000000007, 
                                                  0.17999999999999994), 
                                                 (0.0, 0.0, 
                                                  0.0025000000000000005), 
                                                  (0.0, 0.0,
                                                   0.0025000000000000005)], 
                            'roundness': [1.1143661992227276, 
                                          1.1143661992227276, 
                                          0.9274091445905303, 
                                          1.5032831017086825, 
                                          1.5032831017086825], 
                            'feretDiameter': [0.0, 0.0, 0.0, 0.0, 0.0], 
                            'perimeter': [0.9841743245023866, 
                                          0.9841743245023866, 
                                          2.3368289291553954, 
                                          0.16861550706799563, 
                                          0.16861550706799563], 
                            'perimeterOnBorder': [1.0799999999999998, 
                                                  1.0799999999999998, 
                                                  3.499999999999999, 
                                                  0.12, 0.16], 
                            'perimeterOnBorderRatio': [1.0973665671943476, 
                                                       1.0973665671943476, 
                                                       1.497756192732949, 
                                                       0.7116783152786118, 
                                                       0.9489044203714825], 
                            'equivalentSphericalPerimeter': [1.09673060136832, 
                                                        1.09673060136832, 
                                                        2.16719651824241, 
                                                        0.25347684246135876, 
                                                        0.25347684246135876]}

analyze_settings_4={'meas_list': shape_descriptors}


analyze_output_4=VividImage(analyze_output_image_4, 
                                        analyze_output_metadata_4, 
                                        analyze_output_database_4)

analyze_case_4={'input':analyze_input_4, 'result':analyze_output_4, 
                'settings':analyze_settings_4}
###############################################################################
analyze_input_5=VividImage.from_ndarray(input_array_2, key_dict=size_keys_1)

analyze_settings_5={'meas_list': shape_descriptors}


analyze_output_5=VividImage(analyze_output_image_4, 
                                        analyze_output_metadata_4, 
                                        analyze_output_database_4)

analyze_case_5={'input':analyze_input_5, 'result':analyze_output_5, 
                'settings':analyze_settings_5}
###############################################################################
analyze_input_6=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)

analyze_output_image_6=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                 [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                 [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                 [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                 [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                 [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                 [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                            dtype=np.uint16)

analyze_output_metadata_6={'Type': np.dtype('uint16'), 'DimensionOrder': 'XYZCT',
                           'Name': ['Channel 1'], 'SamplesPerPixel': [1],
                           'SizeY': 10, 'SizeX': 10, 'SizeZ': 2, 'SizeC': 1,
                           'SizeT': 1, 'PhysicalSizeX': 0.1, 
                           'PhysicalSizeY': 0.2, 'PhysicalSizeZ': 0.3, 
                           'TimeIncrement': 0.4, 
                           'TimeIncrementUnit': 'test unit t', 
                           'PhysicalSizeXUnit': 'test unit x', 
                           'PhysicalSizeYUnit': 'test unit y', 
                           'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_6={'tag': [1, 2, 3, 4, 5], 
                         'meanIntensity in Channel 1': 
                              [1.0, 2.0, 3.0, 4.0, 5.0],
                         'medianIntensity in Channel 1': 
                              [0.99609375, 2.01171875, 2.98828125, 4.00390625, 
                               4.98046875], 
                         'skewness in Channel 1': 
                              [0.0, 0.0, 0.0, 0.0, 0.0], 
                         'kurtosis in Channel 1':
                              [0.0, 0.0, 0.0, 0.0, 0.0], 
                         'variance in Channel 1': 
                              [0.0, 0.0, 0.0, 0.0, 0.0], 
                         'maximumPixel in Channel 1': 
                              [(3, 3, 1), (8, 6, 1), (4, 9, 1), (7, 8, 1), 
                               (9, 8, 1)], 
                         'maximumValue in Channel 1': 
                              [1.0, 2.0, 3.0, 4.0, 5.0], 
                         'minimumValue in Channel 1': 
                              [1.0, 2.0, 3.0, 4.0, 5.0], 
                         'minimumPixel in Channel 1': 
                              [(3, 3, 1), (8, 6, 1), (4, 9, 1), (7, 8, 1), 
                               (9, 8, 1)], 
                         'centerOfMass in Channel 1': 
                              [(0.6, 0.4000000000000001, 0.049999999999999996),
                               (2.0999999999999996, 1.0, 0.049999999999999996),
                               (0.6, 1.4000000000000004, 0.04999999999999998), 
                               (2.1, 1.6, 0.05), (2.6999999999999997, 
                               1.6, 0.05)], 
                         'standardDeviation in Channel 1': 
                              [0.0, 0.0, 0.0, 0.0, 0.0], 
                         'cumulativeIntensity in Channel 1': 
                              [18.0, 36.0, 150.0, 8.0, 10.0], 
                         'getWeightedElongation in Channel 1': 
                              [1.4999999999999993, 1.500000000000006, 
                               1.5000000000000007, 1.4999999999999998, 
                               1.499999999999911], 
                        'getWeightedFlatness in Channel 1': 
                             [3.0000000000000027, 3.000000000000021, 
                              5.0, 1.0, 1.0000000000000666], 
                        'getWeightedPrincipalAxes in Channel 1': 
                            [(-1.081386062946582e-16, -1.4069293424906765e-31,
                              1.0, 9.251858538542984e-16, 1.0, 
                              2.407412430484048e-31, -0.9999999999999999, 
                              9.251858538542982e-16, -1.0813860629465819e-16),
                            (-4.3255442517862147e-16, -2.602085213965107e-16, 
                             1.0, -1.1324274851176597e-14, 1.0, 
                             2.6020852139650593e-16, -0.9999999999999989, 
                             -1.1102230246251554e-14, -4.325544251786241e-16),
                             (5.651587795037566e-17, 7.535450393383423e-17, 
                              -1.0, 3.1086244689504383e-15, 0.9999999999999998,
                              7.535450393383438e-17, 0.9999999999999991, 
                              -3.1086244689504363e-15, 5.651587795037538e-17), 
                             (0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 
                               1.0000000000000007, 0.0, 0.0), 
                             (0.0, -0.999511123345334, -0.03126522523424564,
                              0.0, -0.03126522523424564, 0.999511123345334, 
                              -0.9999999999999996, -0.0, -0.0)], 
                        'getWeightedPrincipalMoments in Channel 1': 
                            [(0.003333333333333327, 0.03, 0.06749999999999995),
                             (0.003333333333333327, 0.030000000000000367, 
                              0.06750000000000136), (0.003333333333333327, 
                            0.08333333333333316, 0.1874999999999998), 
                            (0.003333333333333334, 0.003333333333333334, 
                             0.0075), (0.0033333333333328895, 
                            0.0033333333333333335, 0.0074999999999991115)]}


analyze_settings_6={'meas_list': intensity_descriptors}


analyze_output_6=VividImage(analyze_output_image_6, 
                                        analyze_output_metadata_6, 
                                        analyze_output_database_6)

analyze_case_6={'input':analyze_input_6, 'result':analyze_output_6, 
                'settings':analyze_settings_6}
###############################################################################
analyze_input_7=VividImage.from_ndarray(input_array_2, key_dict=size_keys_1)
analyze_settings_7={'meas_list': intensity_descriptors}


analyze_output_7=VividImage(analyze_output_image_6, 
                                        analyze_output_metadata_6, 
                                        analyze_output_database_6)

analyze_case_7={'input':analyze_input_7, 'result':analyze_output_7, 
                'settings':analyze_settings_7}
###############################################################################
analyze_input_8=VividImage.from_ndarray(input_array_1, key_dict=size_keys_1)

analyze_output_image_8=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                                 dtype=np.uint16)

analyze_output_metadata_8={'Type': np.dtype('uint16'), 'DimensionOrder': 'XYZCT', 
                           'Name': ['Channel 1'], 'SamplesPerPixel': [1], 
                           'SizeY': 10, 'SizeX': 10, 'SizeZ': 2, 'SizeC': 1, 
                           'SizeT': 1, 'PhysicalSizeX': 0.1, 
                           'PhysicalSizeY': 0.2, 'PhysicalSizeZ': 0.3, 
                           'TimeIncrement': 0.4, 
                           'TimeIncrementUnit': 'test unit t', 
                           'PhysicalSizeXUnit': 'test unit x', 
                           'PhysicalSizeYUnit': 'test unit y', 
                           'PhysicalSizeZUnit': 'test unit z'}

analyze_output_database_8={'tag': [1, 2, 3, 4, 5], 
                           'volume': [0.108, 0.108, 0.3, 0.012, 0.012], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'centroid': [(0.6, 0.4, 0.05), (2.1, 1.0, 0.05), 
                                        (0.6, 1.4000000000000001, 0.05), 
                                        (2.1, 1.6, 0.05), 
                                        (2.6999999999999997, 1.6, 0.05)], 
                        'ellipsoidDiameter': 
                                        [(0.23447779253903178, 
                                          0.7658012636463994, 
                                          1.148701895469599), 
                                        (0.23447779253903228, 
                                         0.7658012636464039, 
                                         1.1487018954695902), 
                                        (0.22853907486704167, 
                                         1.292812236836682, 
                                         1.9392183552550215), 
                                         (0.0, 0.0, 0.0), 
                                         (0.0, 0.0, 0.0)], 
                        'boundingBox': [(1, 1, 0, 3, 3, 2), (6, 4, 0, 3, 3, 2),
                                        (0, 5, 0, 5, 5, 2), (7, 8, 0, 1, 1, 2), 
                                        (9, 8, 0, 1, 1, 2)], 
                        'pixelsOnBorder': [18, 18, 50, 2, 2], 
                        'elongation': [1.4999999999999998, 1.4999999999999798, 
                                       1.4999999999999991, 0.0, 0.0], 
                        'equivalentSphericalRadius': [0.29542350655280897, 
                                                      0.29542350655280897, 
                                                      0.4152830592077074, 
                                                      0.14202480846149887, 
                                                      0.14202480846149887], 
                        'flatness': [3.2659863237109, 3.265986323710912, 
                                     5.656854249492381, 0.0, 0.0], 
                        'principalAxes': [(-6.033820786006279e-17, 
                                           6.929882858364852e-32, 1.0, 
                                           -8.326672684688669e-16, 1.0, 
                                           -1.1954047930679372e-31, -1.0, 
                                           -8.326672684688669e-16, 
                                           -6.033820786006279e-17), 
                                         (4.827056628805114e-16, 
                                          -2.8712664429959896e-16, 1.0, 
                                          -1.3211653993039363e-14, 
                                          -1.0000000000000002, 
                                          -2.8712664429959284e-16, 
                                          1.0000000000000009, 
                                          -1.296185381249871e-14, 
                                          -4.827056628805161e-16), 
                                         (0.0, 0.0, 1.0, 
                                          -1.1102230246251581e-15, -1.0, 
                                          0.0, 1.0, -1.1102230246251581e-15, 
                                          -0.0), 
                                         (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 
                                          0.0, 1.0),
                                         (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 
                                          0.0, 1.0)], 
                        'principalMoments': [(0.002500000000000009, 
                                              0.0266666666666667,
                                              0.06000000000000005), 
                                            (0.0025000000000000022, 
                                              0.026666666666666818, 
                                              0.059999999999998714), 
                                            (0.0025000000000000022, 
                                              0.08000000000000007, 
                                              0.17999999999999994), 
                                            (0.0, 0.0, 0.0025000000000000005), 
                                            (0.0, 0.0, 0.0025000000000000005)],
                        'roundness': [1.1143661992227276, 1.1143661992227276, 
                                      0.9274091445905303, 1.5032831017086825, 
                                      1.5032831017086825], 
                        'feretDiameter': [0.0, 0.0, 0.0, 0.0, 0.0], 
                        'perimeter': [0.9841743245023866, 0.9841743245023866, 
                                      2.3368289291553954, 0.16861550706799563, 
                                      0.16861550706799563], 
                        'perimeterOnBorder': [1.0799999999999998, 
                                              1.0799999999999998, 
                                              3.499999999999999, 0.12, 0.16], 
                        'perimeterOnBorderRatio': [1.0973665671943476, 
                                                   1.0973665671943476, 
                                                   1.497756192732949, 
                                                   0.7116783152786118, 
                                                   0.9489044203714825], 
                        'equivalentSphericalPerimeter': [1.09673060136832, 
                                                         1.09673060136832, 
                                                         2.16719651824241, 
                                                         0.25347684246135876, 
                                                         0.25347684246135876], 
                       'meanIntensity in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 
                       'medianIntensity in Channel 1': [0.99609375, 2.01171875,
                                                        2.98828125, 4.00390625,
                                                        4.98046875], 
                       'skewness in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 
                       'kurtosis in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 
                       'variance in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 
                       'maximumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), 
                                                     (4, 9, 1), (7, 8, 1), 
                                                     (9, 8, 1)], 
                       'maximumValue in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 
                       'minimumValue in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 
                       'minimumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), 
                                                     (4, 9, 1), (7, 8, 1), 
                                                     (9, 8, 1)], 
                       'centerOfMass in Channel 1': [(0.6, 0.4000000000000001, 
                                                      0.049999999999999996), 
                                                     (2.0999999999999996, 
                                                      1.0, 
                                                      0.049999999999999996), 
                                                      (0.6, 1.4000000000000004,
                                                       0.04999999999999998), 
                                                       (2.1, 1.6, 0.05), 
                                                       (2.6999999999999997, 
                                                        1.6, 0.05)], 
                       'standardDeviation in Channel 1': 
                                                   [0.0, 0.0, 0.0, 0.0, 0.0], 
                       'cumulativeIntensity in Channel 1': 
                                               [18.0, 36.0, 150.0, 8.0, 10.0], 
                       'getWeightedElongation in Channel 1': 
                           [1.4999999999999993, 1.500000000000006, 
                            1.5000000000000007, 1.4999999999999998, 
                            1.499999999999911],
                        'getWeightedFlatness in Channel 1': 
                            [3.0000000000000027, 3.000000000000021, 5.0, 1.0,
                             1.0000000000000666], 
                        'getWeightedPrincipalAxes in Channel 1': 
                            [(-1.081386062946582e-16, -1.4069293424906765e-31, 
                              1.0, 9.251858538542984e-16, 1.0, 
                              2.407412430484048e-31, -0.9999999999999999, 
                              9.251858538542982e-16, -1.0813860629465819e-16), 
                            (-4.3255442517862147e-16, 
                             -2.602085213965107e-16, 1.0, 
                             -1.1324274851176597e-14, 1.0, 
                             2.6020852139650593e-16, 
                             -0.9999999999999989, 
                             -1.1102230246251554e-14, 
                             -4.325544251786241e-16), 
                             (5.651587795037566e-17, 
                              7.535450393383423e-17, -1.0, 
                              3.1086244689504383e-15, 0.9999999999999998, 
                              7.535450393383438e-17, 0.9999999999999991, 
                              -3.1086244689504363e-15, 5.651587795037538e-17), 
                             (0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0000000000000007,
                              0.0, 0.0), (0.0, -0.999511123345334,
                            -0.03126522523424564, 0.0, -0.03126522523424564, 
                            0.999511123345334, -0.9999999999999996, 
                            -0.0, -0.0)], 
                        'getWeightedPrincipalMoments in Channel 1': 
                            [(0.003333333333333327, 0.03, 0.06749999999999995),
                             (0.003333333333333327, 0.030000000000000367, 
                              0.06750000000000136),
                              (0.003333333333333327, 0.08333333333333316, 
                               0.1874999999999998), (0.003333333333333334, 
                                                 0.003333333333333334, 0.0075), 
                               (0.0033333333333328895, 0.0033333333333333335, 
                                0.0074999999999991115)]}



analyze_settings_8={'meas_list': shape_descriptors+intensity_descriptors}


analyze_output_8=VividImage(analyze_output_image_8, 
                                        analyze_output_metadata_8, 
                                        analyze_output_database_8)


analyze_case_8={'input':analyze_input_8, 'result':analyze_output_8, 
                'settings':analyze_settings_8}
###############################################################################
analyze_input_9=VividImage.from_ndarray(input_array_2, key_dict=size_keys_2)

analyze_output_image_9=np.array([[[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],

                                  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                   [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                   [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                   [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]]]], 
                                 dtype=np.uint16)

analyze_output_metadata_9={'Type': np.dtype('uint16'), 
                           'DimensionOrder': 'XYZCT', 'Name': ['Channel 1'], 
                           'SamplesPerPixel': [1], 'SizeY': 10, 'SizeX': 10, 
                           'SizeZ': 2, 'SizeC': 1, 'SizeT': 1, 
                           'PhysicalSizeX': 1, 'PhysicalSizeY': 2, 
                           'PhysicalSizeZ': 3, 'TimeIncrement': 4, 
                           'TimeIncrementUnit': 'micron t', 
                           'PhysicalSizeXUnit': 'micron x', 
                           'PhysicalSizeYUnit': 'micron y', 
                           'PhysicalSizeZUnit': 'micron z'}

analyze_settings_9={'meas_list': shape_descriptors+intensity_descriptors}

analyze_output_database_9={'tag': [1, 2, 3, 4, 5], 
                           'volume': [108.0, 108.0, 300.0, 12.0, 12.0], 
                           'voxelCount': [18, 18, 50, 2, 2], 
                           'centroid': [(6.0, 4.0, 0.5), (21.0, 10.0, 0.5), (6.0, 14.0, 0.5), (21.0, 16.0, 0.5), (27.0, 16.0, 0.5)], 
                           'ellipsoidDiameter': [(2.3447779253903156, 7.658012636464, 11.487018954695998), (2.344777925390315, 7.658012636464003, 11.487018954695994), (2.285390748670416, 12.928122368366814, 19.39218355255022), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0)], 
                           'boundingBox': [(1, 1, 0, 3, 3, 2), (6, 4, 0, 3, 3, 2), (0, 5, 0, 5, 5, 2), (7, 8, 0, 1, 1, 2), (9, 8, 0, 1, 1, 2)], 
                           'pixelsOnBorder': [18, 18, 50, 2, 2], 
                           'elongation': [1.4999999999999998, 1.4999999999999987, 1.5, 0.0, 0.0], 
                           'equivalentSphericalRadius': [2.9542350655280893, 2.9542350655280893, 4.152830592077073, 1.4202480846149885, 1.4202480846149885], 
                           'flatness': [3.265986323710905, 3.2659863237109072, 5.656854249492381, 0.0, 0.0], 
                           'principalAxes': [(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)], 'principalMoments': [(0.25, 2.666666666666668, 6.0), (0.25, 2.6666666666666714, 6.0), (0.25, 8.0, 18.0), (0.0, 0.0, 0.25), (0.0, 0.0, 0.25)], 'roundness': [1.1143661992227274, 1.1143661992227274, 0.9274091445905298, 1.5032831017086825, 1.5032831017086825], 'feretDiameter': [0.0, 0.0, 0.0, 0.0, 0.0], 'perimeter': [98.41743245023866, 98.41743245023866, 233.68289291553955, 16.861550706799562, 16.861550706799562], 'perimeterOnBorder': [108.0, 108.0, 350.0, 12.0, 16.0], 'perimeterOnBorderRatio': [1.0973665671943478, 1.0973665671943478, 1.4977561927329492, 0.7116783152786119, 0.9489044203714825], 'equivalentSphericalPerimeter': [109.67306013683198, 109.67306013683198, 216.7196518242409, 25.347684246135874, 25.347684246135874], 'meanIntensity in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 'medianIntensity in Channel 1': [0.99609375, 2.01171875, 2.98828125, 4.00390625, 4.98046875], 'skewness in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 'kurtosis in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 'variance in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 'maximumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), (4, 9, 1), (7, 8, 1), (9, 8, 1)], 'maximumValue in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 'minimumValue in Channel 1': [1.0, 2.0, 3.0, 4.0, 5.0], 'minimumPixel in Channel 1': [(3, 3, 1), (8, 6, 1), (4, 9, 1), (7, 8, 1), (9, 8, 1)], 'centerOfMass in Channel 1': [(6.0, 4.0, 0.5), (21.0, 10.0, 0.5), (6.0, 14.0, 0.5), (21.0, 16.0, 0.5), (27.0, 16.0, 0.5)], 'standardDeviation in Channel 1': [0.0, 0.0, 0.0, 0.0, 0.0], 'cumulativeIntensity in Channel 1': [18.0, 36.0, 150.0, 8.0, 10.0], 'getWeightedElongation in Channel 1': [1.4999999999999998, 1.499999999999999, 1.5, 1.5, 1.5], 'getWeightedFlatness in Channel 1': [3.000000000000001, 3.0000000000000027, 5.0, 1.0, 1.0], 'getWeightedPrincipalAxes in Channel 1': [(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (0.0, 0.0, 1.0, 0.0, 1.0, 0.0, -1.0, -0.0, -0.0), (0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0000000000000007, 0.0, 0.0), (0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0000000000000007, 0.0, 0.0)], 'getWeightedPrincipalMoments in Channel 1': [(0.3333333333333333, 3.0000000000000013, 6.75), (0.3333333333333333, 3.000000000000005, 6.75), (0.3333333333333333, 8.333333333333334, 18.75), (0.3333333333333333, 0.3333333333333333, 0.75), (0.3333333333333333, 0.3333333333333333, 0.75)]}

analyze_output_9=VividImage(analyze_output_image_9, 
                                        analyze_output_metadata_9, 
                                        analyze_output_database_9)


analyze_case_7={'input':analyze_input_9, 'result':analyze_output_9, 
                'settings':analyze_settings_9}




###############################################################################
analyze_case_list=[analyze_case_1, analyze_case_2, analyze_case_3, analyze_case_4, analyze_case_5, analyze_case_6, analyze_case_7]#, analyze_case_5b, analyze_case_6, analyze_case_7]


#image_2=VividImage.from_ndarray(input_array_1, key_dict=size_keys_2) 

#image_3=VividImage.from_ndarray(input_array_1, key_dict=size_keys_3)  

#image_2=VividImage.from_ndarray(input_array_2, key_dict=size_keys_1)

#image_8=VividImage.from_ndarray(input_array_8, key_dict=size_keys_1)  

#image_5=VividImage.from_ndarray(assets_core.input_array_5, key_dict=keys_3)

#image_5=VividImage.from_ndarray(assets_core.input_array_5, key_dict=keys_3) 
        
tag_image_case_1={'input':'', 'result':np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                                  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
                                                  [0, 0, 0, 0, 0, 0, 2, 2, 2, 0],
                                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                                  [3, 3, 3, 3, 3, 0, 2, 2, 2, 0],
                                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
                                                  [3, 3, 3, 3, 3, 0, 0, 4, 0, 5],
                                                  [3, 3, 3, 3, 3, 0, 0, 0, 0, 0]],dtype=np.uint32)} 